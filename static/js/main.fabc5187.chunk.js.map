{"version":3,"sources":["TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoList","React","memo","props","todos","className","map","todo","user","id","title","name","users","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","completed","find","person","App","state","validateInput","validateSelect","chooseUser","event","setState","target","value","inputTitle","validate","isValid","addTodo","preventDefault","newTodo","Math","max","item","this","action","onSubmit","htmlFor","type","placeholder","autoComplete","onChange","role","disabled","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fabc5187.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = React.memo((props) => {\n  const { todos } = props;\n\n  return (\n    <ul className=\"cards\">\n      {todos.map(todo => {\n        const { user, id, title } = todo;\n\n        return (\n          <li key={id} className=\"cards__card-todo card text-dark bg-light mt-3 mb-3\">\n            {user && (\n              <>\n                <h2 className=\"card-title\">{user.name}</h2>\n                <div className=\"card-text\">{title}</div>\n              </>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n});\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { TodoList } from './TodoList';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nlet preparedTodos = todos.map(\n  todo => {\n    const user = users.find(person => (\n      person.id === todo.userId\n    )) || null;\n\n    return { ...todo, user };\n  },\n);\n\ninterface State {\n  userId: number;\n  title: string;\n  validateInput: boolean;\n  validateSelect: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    userId: 0,\n    title: '',\n    validateInput: true,\n    validateSelect: true,\n  };\n\n  chooseUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      userId: +event.target.value,\n      validateSelect: true,\n    });\n  };\n\n  inputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n      validateInput: true,\n    });\n  };\n\n  validate = (id: number, title: string) => {\n    let isValid = true;\n\n    if (!id) {\n      isValid = false;\n\n      this.setState({\n        validateSelect: false,\n      });\n    }\n\n    if (!title) {\n      isValid = false;\n\n      this.setState({\n        validateInput: false,\n      });\n    }\n\n    return isValid;\n  };\n\n  addTodo = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { userId, title } = this.state;\n\n    if (!this.validate(userId, title)) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...preparedTodos.map(item => item.id)) + 1,\n      user: users.find(person => person.id === userId) || null,\n      userId,\n      title,\n      completed: false,\n    };\n\n    preparedTodos = [...preparedTodos, newTodo];\n    this.setState({\n      userId: 0,\n      title: '',\n    });\n  };\n\n  render() {\n    const {\n      userId, title, validateInput, validateSelect,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <form\n          action=\"\"\n          className=\"todoForm\"\n          onSubmit={this.addTodo}\n        >\n          <label htmlFor=\"title\" className=\"form-label\">\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={this.inputTitle}\n            />\n\n            {!validateInput && (\n              <p\n                className=\"alert alert-danger\"\n                role=\"alert\"\n              >\n                Please enter the title\n              </p>\n            )}\n          </label>\n\n          <label htmlFor=\"userId\" className=\"form-label\">\n            <select\n              id=\"userId\"\n              name=\"userId\"\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              value={userId}\n              onChange={this.chooseUser}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {users.map(person => {\n                const { id, name } = person;\n\n                return (\n                  <option value={id} key={id}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n\n            {!validateSelect && (\n              <p\n                className=\"alert alert-danger\"\n                role=\"alert\"\n              >\n                Please choose a user\n              </p>\n            )}\n          </label>\n\n          <button type=\"submit\" className=\"btn btn-success button\">\n            Add\n          </button>\n        </form>\n        <TodoList todos={preparedTodos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}